//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// PUBLIC PROPERTIES

// go/keep-sorted start
@use '../../sass/theme';
@use '../../tokens';
// go/keep-sorted end

@mixin theme($tokens) {
  $reference: tokens.md-comp-linear-progress-indicator-values();
  $tokens: theme.validate-theme($reference, $tokens);
  $tokens: theme.create-theme-vars($tokens, 'linear-progress');

  @include theme.emit-theme-vars($tokens);
}

@mixin styles() {
  $tokens: tokens.md-comp-linear-progress-indicator-values();
  $tokens: theme.create-theme-vars($tokens, 'linear-progress');

  // note, transition settings match MDC
  // see https://github.com/material-components/material-components-web/blob/master/packages/mdc-linear-progress/_linear-progress.scss#L79
  $_determinate-duration: 250ms;
  $_determinate-easing: cubic-bezier(0.4, 0, 0.6, 1);
  // see https://github.com/material-components/material-components-web/blob/master/packages/mdc-linear-progress/_linear-progress.scss#L218
  $_indeterminate-duration: 2s;

  // Note, track background is a series of animating dots sized to fit
  // the track height. Since the dots are circular, width scales with height.
  // Background width is separated because it's also used to help animate the
  // /dots.
  $_track-dot-size: calc(var(--_track-height) / 2);
  $_track-background-width: calc($_track-dot-size * 5);
  // this is a series of sized/colored dots.
  $_track-background: 0 / $_track-background-width 100%
    radial-gradient(
      circle at calc($_track-dot-size * 2),
      var(--_track-color) 0,
      var(--_track-color) $_track-dot-size,
      transparent $_track-dot-size
    );

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: #{$value};
    }

    display: block;
    position: relative;
    // note, this matches the `meter` element and is just done so
    // there's a minimum width when in a container with a display like
    // inline-flex.
    min-inline-size: 80px;
    block-size: var(--_track-height);
    content-visibility: auto;
    contain: strict;
  }

  * {
    position: absolute;
  }

  .linear-progress {
    inset: 0;
    outline: transparent solid 1px;
    border-radius: var(--_track-shape);
    overflow: hidden;
    display: flex;
    align-items: center;
    // setup rendering direction. In `ltr`, normal is left to right and
    // in `rtl` this is flipped.
    --__dirOrigin: left;
    --__dirSign: 1;
  }

  :host-context([dir='rtl']) .linear-progress {
    --__dirOrigin: right;
    --__dirSign: -1;
  }

  :host([dir='rtl']) .linear-progress {
    --__dirOrigin: right;
    --__dirSign: -1;
  }

  .linear-progress:dir(rtl) {
    --__dirOrigin: right;
    --__dirSign: -1;
  }

  .bar {
    animation: none;
    // position is offset for indeterminate animation, so we lock the inline size here.
    inline-size: 100%;
    block-size: var(--_active-indicator-height);
    transform-origin: var(--__dirOrigin) center;
    will-change: transform;

    transition: transform $_determinate-duration $_determinate-easing;
  }

  .primary-bar {
    transform: scaleX(var(--__progress, 0));
  }

  .secondary-bar {
    display: none;
  }

  .bar-inner {
    inset: 0;
    animation: none;
    background: var(--_active-indicator-color);
  }

  .buffer-bar {
    background: var(--_track-color);
    inset: 0;
    will-change: transform;
    transition: transform $_determinate-duration $_determinate-easing;
    transform-origin: var(--__dirOrigin) center;
    transform: scaleX(var(--__buffer, 0));
  }

  .track {
    inset: 0;
    will-change: transform;
    animation: linear infinite buffering;
    animation-duration: $_determinate-duration;
    background: $_track-background;
  }

  // indeterminate
  .indeterminate .bar {
    transition: none;
  }

  // note, the numbers here come directly from the mdc implementation.
  // see https://github.com/material-components/material-components-web/blob/master/packages/mdc-linear-progress/_linear-progress.scss#L208.
  .indeterminate .primary-bar {
    inset-inline-start: -145.167%;
  }

  .indeterminate .secondary-bar {
    inset-inline-start: -54.8889%;
    // this is display none by default.
    display: block;
  }

  .indeterminate .track {
    display: none;
  }

  .indeterminate.animation-ready .primary-bar {
    will-change: transform;
    animation: primary-indeterminate-translate linear infinite;
    animation-duration: $_indeterminate-duration;
  }

  .indeterminate.animation-ready .primary-bar > .bar-inner {
    will-change: transform;
    animation: linear infinite primary-indeterminate-scale;
    animation-duration: $_indeterminate-duration;
  }

  .indeterminate.animation-ready.four-color-active .primary-bar > .bar-inner {
    animation-name: primary-indeterminate-scale, four-color-active;
    animation-duration: $_indeterminate-duration,
      calc($_indeterminate-duration * 2);
  }

  .indeterminate.animation-ready .secondary-bar {
    will-change: transform;
    animation: linear infinite secondary-indeterminate-translate;
    animation-duration: $_indeterminate-duration;
  }

  .indeterminate.animation-ready .secondary-bar > .bar-inner {
    will-change: transform;
    animation: linear infinite secondary-indeterminate-scale;
    animation-duration: $_indeterminate-duration;
  }

  .indeterminate.animation-ready.four-color-active .secondary-bar > .bar-inner {
    animation-name: secondary-indeterminate-scale, four-color-active;
    animation-duration: $_indeterminate-duration,
      calc($_indeterminate-duration * 2);
  }

  // note, the numbers here come directly from the mdc implementation.
  // see https://github.com/material-components/material-components-web/blob/master/packages/mdc-linear-progress/_linear-progress.scss#L208.
  // keyframes
  @keyframes primary-indeterminate-translate {
    0% {
      transform: translateX(0px);
    }

    20% {
      animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);
      transform: translateX(0px);
    }

    59.15% {
      animation-timing-function: cubic-bezier(
        0.302435,
        0.381352,
        0.55,
        0.956352
      );
      transform: translateX(calc(var(--__dirSign) * 83.6714%));
    }

    100% {
      transform: translateX(calc(var(--__dirSign) * 200.611%));
    }
  }

  @keyframes secondary-indeterminate-translate {
    0% {
      animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);
      transform: translateX(0px);
    }

    25% {
      animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);
      transform: translateX(calc(var(--__dirSign) * 37.6519%));
    }

    48.35% {
      animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);
      transform: translateX(calc(var(--__dirSign) * 84.3862%));
    }

    100% {
      transform: translateX(calc(var(--__dirSign) * 160.278%));
    }
  }

  @keyframes primary-indeterminate-scale {
    0% {
      transform: scaleX(0.08);
    }

    36.65% {
      animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);
      transform: scaleX(0.08);
    }

    69.15% {
      animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
      transform: scaleX(0.661479);
    }

    100% {
      transform: scaleX(0.08);
    }
  }

  @keyframes secondary-indeterminate-scale {
    0% {
      animation-timing-function: cubic-bezier(
        0.205028,
        0.057051,
        0.57661,
        0.453971
      );
      transform: scaleX(0.08);
    }

    19.15% {
      animation-timing-function: cubic-bezier(
        0.152313,
        0.196432,
        0.648374,
        1.00432
      );
      transform: scaleX(0.457104);
    }

    44.15% {
      animation-timing-function: cubic-bezier(
        0.257759,
        -0.003163,
        0.211762,
        1.38179
      );
      transform: scaleX(0.72796);
    }

    100% {
      transform: scaleX(0.08);
    }
  }

  @keyframes buffering {
    0% {
      // the amount to animate is aligned with the default track background
      transform: translateX(calc(var(--__dirSign) * $_track-background-width));
    }
  }

  @keyframes four-color-active {
    0% {
      background: var(--_four-color-active-indicator-one-color);
    }

    15% {
      background: var(--_four-color-active-indicator-one-color);
    }
    25% {
      background: var(--_four-color-active-indicator-two-color);
    }
    40% {
      background: var(--_four-color-active-indicator-two-color);
    }

    50% {
      background: var(--_four-color-active-indicator-three-color);
    }
    65% {
      background: var(--_four-color-active-indicator-three-color);
    }
    75% {
      background: var(--_four-color-active-indicator-four-color);
    }
    90% {
      background: var(--_four-color-active-indicator-four-color);
    }
    100% {
      background: var(--_four-color-active-indicator-one-color);
    }
  }

  @media screen and (forced-colors: active) {
    .linear-progress {
      --_active-indicator-color: canvastext;
      --_track-color: graytext;
      border: 1px solid canvastext;
    }

    .indeterminate.linear-progress {
      --_track-color: canvas;
    }
  }
}
