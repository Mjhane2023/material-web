//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

// PUBLIC PROPERTIES

// go/keep-sorted start
@use '../../sass/map-ext';
@use '../../sass/theme';
@use 'sass:map';
// go/keep-sorted end
// go/keep-sorted start
@use '../../tokens';
// go/keep-sorted end

@function pick-tokens($tokens) {
  @return map-ext.pick($tokens, ('container-color'));
}

$md-sys-color: tokens.md-sys-color-values-light();
$surface-variant: map.get($md-sys-color, 'surface-variant');

@function add-tokens($tokens) {
  $added-tokens: (
    'divider-color': $surface-variant,
  );
  @return map.merge($tokens, $added-tokens);
}

$tablist-tokens: add-tokens(
  pick-tokens(tokens.md-comp-primary-navigation-tab-values())
);

@mixin theme($tokens) {
  $tokens: theme.validate-theme($tablist-tokens, $tokens);
  $tokens: theme.create-theme-vars($tokens, 'tablist');
  @include theme.emit-theme-vars($tokens);
}

@mixin styles() {
  $tokens: theme.create-theme-vars($tablist-tokens, 'tablist');

  :host {
    @each $token, $value in $tokens {
      --_#{$token}: #{$value};
    }

    // --_container-color: var(--md-sys-surface, #fffbfe);
    //--_divider-color: var(--md-sys-color-surface-variant, #e7e0ec);
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
    align-items: center;
    overflow: auto;
    scroll-behavior: smooth;
    scrollbar-width: none;
    background: var(--_container-color);
    border-bottom: 1px solid var(--_divider-color);
    position: relative;
  }

  :host([variant~='wide']:not([variant~='vertical'])) {
    border-radius: 9999px;
  }

  :host([variant~='vertical']) {
    display: inline-flex;
    flex-direction: column;
    align-items: stretch;
    gap: 12px;
  }

  :host([variant~='vertical'][variant~='navigation']) {
    padding-inline: 12px;
  }

  :host([variant~='vertical'][variant~='navigation'][variant~='wide']) {
    gap: 0px;
    padding-block: 12px;
    padding-inline: 28px;
  }

  :host([hidden]) {
    display: none;
  }

  :host::-webkit-scrollbar {
    display: none;
  }

  :host(:not([variant~='vertical'])) ::slotted(*) {
    flex: 1;
  }

  ::slotted([selected]) {
    z-index: 1;
  }

  ::slotted(:focus-within) {
    z-index: 2;
  }
}
